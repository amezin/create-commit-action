name: ci

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  dist-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: npm ci
      - run: npm run package
      - run: git diff --exit-code --color --ignore-space-at-eol --text dist/

  test:
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.runs-on }}
    needs: dist-check
    if: github.event.pull_request.head.repo.node_id == github.event.pull_request.base.repo.node_id
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - run: mkdir testdir
      - run: date -u >testdir/test-file.txt
      - run: ln -s testdir/test-file.txt test-symlink
      - run: echo '#!/bin/sh' >testdir/test-executable
      - run: chmod a+x testdir/test-executable
      - run: echo -n $'\xc3\x28' >invalid-utf8

      - id: test-commit
        uses: ./.
        with:
          message: 'Auto-generated test commit'
          files: |
            testdir/test-file.txt
            test-symlink
            testdir/test-executable
            invalid-utf8

      - run: git fetch origin "$COMMIT"
        env:
          COMMIT: ${{ steps.test-commit.outputs.sha }}

      - run: test "$(git show FETCH_HEAD:testdir/test-file.txt)" = "$(cat testdir/test-file.txt)"
      - run: test "$(git log --format=%B -n 1 FETCH_HEAD)" = "Auto-generated test commit"
      - run: test "$(git rev-parse FETCH_HEAD:)" = "$TREE"
        env:
          TREE: ${{ steps.test-commit.outputs.tree_sha }}

      - run: git clean -dxff

      - run: test ! -e testdir/test-file.txt
      - run: test ! -e testdir/test-executable
      - run: test ! -e test-symlink
      - run: test ! -e invalid-utf8

      - run: git checkout "$COMMIT"
        env:
          COMMIT: ${{ steps.test-commit.outputs.sha }}

      - run: test -e testdir/test-file.txt
      - run: test ! -x testdir/test-file.txt
      - run: diff test-symlink testdir/test-file.txt
      - run: test -x testdir/test-executable
      - run: test "$(cat testdir/test-executable)" = '#!/bin/sh'
      - run: test "$(cat invalid-utf8)" = $'\xc3\x28'

      - run: test "$(readlink test-symlink)" = "testdir/test-file.txt"
        if: runner.os != 'Windows'
