name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '24 18 * * *'

defaults:
  run:
    shell: bash

jobs:
  shared:
    uses: amezin/js-actions-common/.github/workflows/shared-ci.yml@9e452370381860c1a3ef9b30848add61c32c1730 # v1.0.6
    permissions:
      contents: read

  test:
    needs:
      - shared

    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.runs-on }}
    if: github.event.pull_request.head.repo.node_id == github.event.pull_request.base.repo.node_id
    permissions:
      contents: write

    steps:
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: mkdir testdir
      - run: date -u >testdir/test-file.txt
      - run: ln -s testdir/test-file.txt test-symlink
      - run: echo $'#!/bin/sh\necho Hello World' >testdir/test-executable
      - run: chmod a+x testdir/test-executable
      - run: echo -n $'\xc3\x28' >invalid-utf8

      - id: test-commit
        uses: ./.
        with:
          message: 'Auto-generated test commit'
          files: |
            testdir/*
            test-symlink
            invalid-utf8
            dist/index.js

      - run: test "$MESSAGE_FROM_JSON" = "Auto-generated test commit"
        env:
          MESSAGE_FROM_JSON: ${{ fromJSON(steps.test-commit.outputs.commit).message }}

      - run: test "$PARENT_SHA" = "$GITHUB_SHA"
        env:
          PARENT_SHA: ${{ fromJSON(steps.test-commit.outputs.commit).parents[0].sha }}

      - run: test "$COMMIT_URL_FROM_JSON" = "$COMMIT_URL_OUTPUT"
        env:
          COMMIT_URL_FROM_JSON: ${{ fromJSON(steps.test-commit.outputs.commit).url }}
          COMMIT_URL_OUTPUT: ${{ steps.test-commit.outputs.url }}

      - run: echo "$COMMIT_URL" | grep "$COMMIT_SHA"
        env:
          COMMIT_SHA: ${{ steps.test-commit.outputs.sha }}
          COMMIT_URL: ${{ steps.test-commit.outputs.url }}

      - run: test "$COMMIT_URL_FROM_JSON" = "$COMMIT_URL_OUTPUT"
        env:
          COMMIT_URL_FROM_JSON: ${{ fromJSON(steps.test-commit.outputs.commit).html_url }}
          COMMIT_URL_OUTPUT: ${{ steps.test-commit.outputs.html_url }}

      - run: echo "$COMMIT_URL" | grep "$COMMIT_SHA"
        env:
          COMMIT_SHA: ${{ steps.test-commit.outputs.sha }}
          COMMIT_URL: ${{ steps.test-commit.outputs.html_url }}

      - run: test "$TREE_URL_FROM_JSON" = "$TREE_URL_OUTPUT"
        env:
          TREE_URL_FROM_JSON: ${{ fromJSON(steps.test-commit.outputs.commit).tree.url }}
          TREE_URL_OUTPUT: ${{ steps.test-commit.outputs.tree_url }}

      - run: test "$TREE_URL_FROM_JSON" = "$TREE_URL_OUTPUT"
        env:
          TREE_URL_FROM_JSON: ${{ fromJSON(steps.test-commit.outputs.tree).url }}
          TREE_URL_OUTPUT: ${{ steps.test-commit.outputs.tree_url }}

      - run: test "$TREE_SHA_FROM_JSON" = "$TREE_SHA_OUTPUT"
        env:
          TREE_SHA_FROM_JSON: ${{ fromJSON(steps.test-commit.outputs.commit).tree.sha }}
          TREE_SHA_OUTPUT: ${{ steps.test-commit.outputs.tree_sha }}

      - run: test "$TREE_SHA_FROM_JSON" = "$TREE_SHA_OUTPUT"
        env:
          TREE_SHA_FROM_JSON: ${{ fromJSON(steps.test-commit.outputs.tree).sha }}
          TREE_SHA_OUTPUT: ${{ steps.test-commit.outputs.tree_sha }}

      - run: echo "$TREE_URL" | grep "$TREE_SHA"
        env:
          TREE_SHA: ${{ steps.test-commit.outputs.tree_sha }}
          TREE_URL: ${{ steps.test-commit.outputs.tree_url }}

      - run: git fetch origin "$COMMIT"
        env:
          COMMIT: ${{ steps.test-commit.outputs.sha }}

      - run: test "$(git show FETCH_HEAD:testdir/test-file.txt)" = "$(cat testdir/test-file.txt)"
      - run: test "$(git log --format=%B -n 1 FETCH_HEAD)" = "Auto-generated test commit"
      - run: test "$(git rev-parse FETCH_HEAD:)" = "$TREE"
        env:
          TREE: ${{ steps.test-commit.outputs.tree_sha }}

      - run: git clean -dxff

      - run: test ! -e testdir/test-file.txt
      - run: test ! -e testdir/test-executable
      - run: test ! -e test-symlink
      - run: test ! -e invalid-utf8

      - run: git checkout "$COMMIT"
        env:
          COMMIT: ${{ steps.test-commit.outputs.sha }}

      - run: test -e testdir/test-file.txt
      - run: test ! -x testdir/test-file.txt
      - run: diff test-symlink testdir/test-file.txt
      - run: test -x testdir/test-executable
      - run: test "$(cat testdir/test-executable)" = $'#!/bin/sh\necho Hello World'
      - run: test "$(cat invalid-utf8)" = $'\xc3\x28'
      - run: test -z "$(git show -- dist/index.js)"

      - run: test "$(readlink test-symlink)" = "testdir/test-file.txt"
        if: runner.os != 'Windows'
